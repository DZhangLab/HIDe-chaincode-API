/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

const { exec } = require('child_process');

module.exports = require('./lib/express');

const express = require('express')
const app = express()
const port = 3000


app.get('/', (req, res) => {
    res.send('hello world')
  })

app.get('/InsertEntry/:key/:val', (req, res) => {
    const PWD = '/Users/bruceguo/fabric-samples/test-network'
    const command = `cd\ncd fabric-samples/test-network\nexport PATH=${PWD}/../bin:$PATH\nexport FABRIC_CFG_PATH=${PWD}/../config/\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID="Org1MSP"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"InsertEntry","Args":["${req.params.key}","${req.params.val}"]}'`;

    exec(command, (error, stdout, stderr) => {
        if (error) {
            console.error(`Error executing command: ${error}`);
            return;
        }

        console.log(`Command output: ${stdout}`);
        res.send(stderr)
        console.error(`Command errors: ${stderr}`);
    });

    
})

app.get('/GetEntry', (req, res) =>{
    res.send('get entry')
})

app.get('/EntryExists', (req, res) => {
    res.send('entry exist')
})

app.get('/UpdateEntry/:key/:val', (req, res) => { // todo
    const PWD = '/Users/bruceguo/fabric-samples/test-network'
    const command = `cd\ncd fabric-samples/test-network\nexport PATH=${PWD}/../bin:$PATH\nexport FABRIC_CFG_PATH=${PWD}/../config/\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID="Org1MSP"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"UpdateEntry","Args":["${req.params.key}","${req.params.val}"]}'`;
    exec(command, (error, stdout, stderr) => {
        if (error) {
            console.error(`Error executing command: ${error}`);
            return;
        }

        console.log(`Command output: ${stdout}`);
        res.send(stderr)
        console.error(`Command errors: ${stderr}`);
    });
    
})

app.get('/DeleteEntry/:key', (req, res) => { // todo
    const PWD = '/Users/bruceguo/fabric-samples/test-network'
    const command = `cd\ncd fabric-samples/test-network\nexport PATH=${PWD}/../bin:$PATH\nexport FABRIC_CFG_PATH=${PWD}/../config/\nexport CORE_PEER_TLS_ENABLED=true\nexport CORE_PEER_LOCALMSPID="Org1MSP"\nexport CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt\nexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp\nexport CORE_PEER_ADDRESS=localhost:7051\npeer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem" -C mychannel -n basic --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" -c '{"function":"DeleteEntry","Args":["${req.params.key}"]}'`;
    exec(command, (error, stdout, stderr) => {
        if (error) {
            console.error(`Error executing command: ${error}`);
            return;
        }
        console.log(`Command output: ${stdout}`);
        res.send(stderr)
        console.error(`Command errors: ${stderr}`);
    });
})

app.listen(port, () => {
    console.log(`Example app listening on port ${port}`)
  })



